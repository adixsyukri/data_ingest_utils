<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<workflow-app xmlns="uri:oozie:workflow:0.5" name="FULL-INGEST-DIRECT-WF-${source_name}-${schema}-${table}">
    <parameters>
        <property>
            <name>prefix</name>
            <value>/user/trace/source</value>
        </property>
        <property>
            <name>flat_prefix</name>
            <value>/user/trace/source_flat/</value>
        </property>
        <property>
            <name>stagingdb</name>
            <value>staging</value>
        </property>
    </parameters>
    <start to="getValues"/>
    <action name="getValues">
        <shell
            xmlns="uri:oozie:shell-action:0.3">
            <job-tracker>${resourceManager}</job-tracker>
            <name-node>${nameNode}</name-node>
            <exec>python</exec>
            <argument>date_helper.py</argument>
            <file>date_helper.py</file>
            <capture-output/>
        </shell>
        <ok to="removeExisting"/>
        <error to="kill"/>
    </action>

    <action name="removeExisting">
        <fs>
            <name-node>${nameNode}</name-node>
            <delete path="${prefix}/${source_name}/${schema}_${table}/CURRENT/"></delete>
        </fs>
        <ok to="sqoop"/>
        <error to="kill"/>
    </action>
    <action name="sqoop">
        <sqoop xmlns="uri:oozie:sqoop-action:0.3">
            <job-tracker>${resourceManager}</job-tracker>
            <name-node>${nameNode}</name-node>
            <job-xml>conf/oraoop-site.xml</job-xml>
            <arg>import</arg>
            <arg>-Dmapreduce.job.user.classpath.first=true</arg> 
            <arg>--connect</arg>
            <arg>${jdbc_uri}</arg>
            <arg>-m</arg>
            <arg>${mapper}</arg>
            <arg>--table</arg>
            <arg>${schema}.${table}</arg>
            <arg>--target-dir</arg>
            <arg>${prefix}/${source_name}/${schema}_${table}/CURRENT</arg>
            <arg>--delete-target-dir</arg>
            <arg>--username</arg>
            <arg>${username}</arg>
            <arg>--password</arg>
            <arg>${password}</arg>
            <arg>--as-parquetfile</arg>
            <arg>--direct</arg>
            <arg>--map-column-java</arg>
            <arg>${columns_java}</arg>
        </sqoop>
        <ok to="prepDistcp"/>
        <error to="kill"/>
    </action>

    <action name="prepDistcp">
        <fs>
            <name-node>${nameNode}</name-node>
            <delete path="${prefix}/${source_name}/${schema}_${table}/ingest_date=${wf:actionData('getValues')['YEAR']}-${wf:actionData('getValues')['MONTH']}-${wf:actionData('getValues')['DAY']}"></delete>
        </fs>
        <ok to="distcp"/>
        <error to="kill"/>
    </action>
    <action name="distcp">
        <distcp
            xmlns="uri:oozie:distcp-action:0.2">
            <job-tracker>${resourceManager}</job-tracker>
            <name-node>${nameNode}</name-node>
            <arg>${nameNode}/${prefix}/${source_name}/${schema}_${table}/CURRENT/</arg>
            <arg>${nameNode}/${prefix}/${source_name}/${schema}_${table}/ingest_date=${wf:actionData('getValues')['YEAR']}-${wf:actionData('getValues')['MONTH']}-${wf:actionData('getValues')['DAY']}/</arg>
        </distcp>
        <ok to="markRawDataReady"/>
        <error to="kill"/>
    </action>
    <action name="markRawDataReady">
        <fs>
            <name-node>${nameNode}</name-node>
            <touchz path="${nameNode}/${prefix}/${source_name}/${schema}_${table}/ingest_date=${wf:actionData('getValues')['YEAR']}-${wf:actionData('getValues')['MONTH']}-${wf:actionData('getValues')['DAY']}/_SUCCESS"></touchz>
        </fs>
        <ok to="createExternalTable"/>
        <error to="kill"/>
    </action>
    <action name="createExternalTable">
        <hive
            xmlns="uri:oozie:hive-action:0.6">
            <job-tracker>${resourceManager}</job-tracker>
            <name-node>${nameNode}</name-node>
            <query>
DROP TABLE IF EXISTS ${stagingdb}.${source_name}_${schema}_${table};
CREATE EXTERNAL TABLE ${stagingdb}.${source_name}_${schema}_${table} (
    ${columns_create}
) STORED AS PARQUET LOCATION '${prefix}/${source_name}/${schema}_${table}/ingest_date=${wf:actionData('getValues')['YEAR']}-${wf:actionData('getValues')['MONTH']}-${wf:actionData('getValues')['DAY']}';
            </query>
        </hive>
        <ok to="exportFlat"/>
        <error to="kill"/>
    </action>

    <action name="exportFlat">
        <hive
            xmlns="uri:oozie:hive-action:0.6">
            <job-tracker>${resourceManager}</job-tracker>
            <name-node>${nameNode}</name-node>
            <query>
SET hive.exec.compress.output=false;
ADD JAR ${nameNode}/user/oozie/share/lib/lib_20161221211109/hive/hive-contrib-1.2.1000.2.5.3.0-37.jar;

CREATE TEMPORARY EXTERNAL TABLE ${source_name}_${schema}_${table}_CURRENT (
    ${columns_create}
) STORED AS PARQUET LOCATION '${prefix}/${source_name}/${schema}_${table}/ingest_date=${wf:actionData('getValues')['YEAR']}-${wf:actionData('getValues')['MONTH']}-${wf:actionData('getValues')['DAY']}';

CREATE TEMPORARY EXTERNAL TABLE ${source_name}_${schema}_${table}_FLAT (
    ${columns_create}
) ROW FORMAT SERDE "org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe"
  WITH SERDEPROPERTIES (
      'field.delim'='${field_delimiter}'
  )
  LOCATION '${flat_prefix}/${source_name}/${schema}_${table}/${wf:actionData('getValues')['YEAR']}-${wf:actionData('getValues')['MONTH']}-${wf:actionData('getValues')['DAY']}'
  TBLPROPERTIES('serialization.null.format'='');
    
INSERT OVERWRITE TABLE ${source_name}_${schema}_${table}_FLAT
SELECT 
    ${columns_flat}
FROM ${source_name}_${schema}_${table}_CURRENT;
            </query>
        </hive>
        <ok to="markFlatDataReady"/>
        <error to="kill"/>
    </action>

    <action name="markFlatDataReady">
        <fs>
            <name-node>${nameNode}</name-node>
            <touchz path="${flat_prefix}/${source_name}/${schema}_${table}/${wf:actionData('getValues')['YEAR']}-${wf:actionData('getValues')['MONTH']}-${wf:actionData('getValues')['DAY']}/_SUCCESS"></touchz>
        </fs>
        <ok to="end"/>
        <error to="kill"/>
    </action>

    <kill name="kill">
        <message>${wf:errorMessage(wf:lastErrorNode())}</message>
    </kill>
    <end name="end"/>
</workflow-app>
